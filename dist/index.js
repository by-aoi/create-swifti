#!/usr/bin/env node
var e=Object.create,t=Object.defineProperty,a=Object.getOwnPropertyDescriptor,r=Object.getOwnPropertyNames,s=Object.getPrototypeOf,o=Object.prototype.hasOwnProperty,i=(i,c,n)=>(n=null!=i?e(s(i)):{},((e,s,i,c)=>{if(s&&"object"==typeof s||"function"==typeof s)for(let n of r(s))o.call(e,n)||n===i||t(e,n,{get:()=>s[n],enumerable:!(c=a(s,n))||c.enumerable});return e})(!c&&i&&i.__esModule?n:t(n,"default",{value:i,enumerable:!0}),i)),c=i(require("inquirer")),n=i(require("fs-extra")),l=i(require("chalk")),u=class{static date(){const e=new Date;let t=e.getHours(),a=e.getMinutes(),r=e.getSeconds(),s=t>=12?"PM":"AM";t%=12,t=t||12,t=t.toString().padStart(2,"0"),a=a.toString().padStart(2,"0"),r=r.toString().padStart(2,"0");let o=`${t}:${a}:${r} ${s}`;return`${l.default.gray(o)}`}static error(e){console.log(`[${l.default.red("ERROR")}] ${this.date()} ${e}`)}static info(e){console.log(`[${l.default.cyan("INFO")}] ${this.date()} ${e}`)}static success(e){console.log(`[${l.default.green("SUCCESS")}] ${this.date()} ${e}`)}static server(e){console.log(`[${l.default.yellow("SERVER")}] ${this.date()} ${e}`)}},d=i(require("path"));!async function(){const{projectName:e,typescript:t}=await c.default.prompt([{name:"projectName",message:"What is your project named?",default:"my-app"},{name:"typescript",message:"Would you like to use TypeScript?",type:"confirm"}]),a=d.default.join(process.cwd(),e);if(await n.default.exists(a))return u.error(`directory name in use "${e}"`);const r=d.default.join(__dirname,"../templates/"+(t?"ts":"js"));await n.default.copy(r,a);const s=d.default.join(a,"package.json"),o={name:d.default.basename(e).toLowerCase(),version:"1.0.0",scripts:{dev:"swifti",build:"swifti build"},dependencies:{swifti:"^0.2.0"}};t&&(o.devDependencies={typescript:"^5.3.2"});const i=JSON.stringify(o,null,2);await n.default.writeFile(s,i,"utf-8"),u.success("project created successfully.")}();